import React, { useState, useRef, useEffect } from 'react'; // –î–æ–±–∞–≤–ª–µ–Ω useEffect –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–∑–∞–≥—Ä—É–∑–∫–∏ –∏ –º—É–∑—ã–∫–∏
import { View, Text, Image, TouchableOpacity, Alert, StyleSheet, ImageBackground, ScrollView, BackHandler } from 'react-native'; // –î–æ–±–∞–≤–ª–µ–Ω BackHandler –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
import { Video, AVPlaybackStatus, Audio } from 'expo-av'; // –î–æ–±–∞–≤–ª–µ–Ω Audio –¥–ª—è –º—É–∑—ã–∫–∏
import AsyncStorage from '@react-native-async-storage/async-storage'; // –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç AsyncStorage –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
import Slider from '@react-native-community/slider'; // –î–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª–∑—É–Ω–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è score, multiplier –∏ upgradeCost
interface GameState {
  score: number; // –¢–µ–∫—É—â–∏–µ –æ—á–∫–∏ –∏–≥—Ä–æ–∫–∞
  multiplier: number; // –ú–Ω–æ–∂–∏—Ç–µ–ª—å –∫–ª–∏–∫–∞ (—Å–∫–æ–ª—å–∫–æ –æ—á–∫–æ–≤ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∑–∞ –∫–ª–∏–∫)
  upgradeCost: number; // –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–ø–≥—Ä–µ–π–¥–∞
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–≥—Ä—ã ‚Äî —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É –∫–ª–∏–∫–∞ –∏ –∞–ø–≥—Ä–µ–π–¥–æ–≤
function Game({ volume, onBackToMenu }: { volume: number; onBackToMenu: () => void }) { // –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–ø—Å onBackToMenu
  // –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ AsyncStorage (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–ª—è –≤–∞—à–µ–π –∏–≥—Ä—ã)
  const STORAGE_KEY = 'mgeClickerGameData';

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  const [gameState, setGameState] = useState<GameState>({
    score: 0, // –ù–∞—á–∏–Ω–∞–µ–º —Å 0 –æ—á–∫–æ–≤
    multiplier: 1, // –ú–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é x1
    upgradeCost: 10, // –ü–µ—Ä–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–ø–≥—Ä–µ–π–¥–∞ ‚Äî 10 –æ—á–∫–æ–≤
  });

  // –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–≤—É–∫ –¥–ª—è –∏–≥—Ä—ã
  const gameMusicRef = useRef<Audio.Sound | null>(null);

  // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ AsyncStorage
  const saveGameData = async () => {
    try {
      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(gameState));
      console.log('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ AsyncStorage
  const loadGameData = async () => {
    try {
      const storedData = await AsyncStorage.getItem(STORAGE_KEY);
      if (storedData !== null) {
        const parsedData: GameState = JSON.parse(storedData);
        setGameState(parsedData);
        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Game
  useEffect(() => {
    loadGameData();
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ gameState
  useEffect(() => {
    saveGameData();
  }, [gameState]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º—É–∑—ã–∫—É –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const loadGameMusic = async () => {
      if (!gameMusicRef.current) {
        try {
          const { sound } = await Audio.Sound.createAsync(require('./assets/sounds/game_music.mp3')); // –ü—É—Ç—å –∫ –º—É–∑—ã–∫–µ –∏–≥—Ä—ã (–¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ assets/sounds/)
          gameMusicRef.current = sound;
          await sound.setVolumeAsync(volume); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
          await sound.setIsLoopingAsync(true); // –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É
          await sound.playAsync(); // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º—É–∑—ã–∫–∏ –∏–≥—Ä—ã:', error);
        }
      }
    };
    loadGameMusic();

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      if (gameMusicRef.current) {
        gameMusicRef.current.unloadAsync();
      }
    };
  }, []); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–µ

  // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ volume
  useEffect(() => {
    if (gameMusicRef.current) {
      gameMusicRef.current.setVolumeAsync(volume);
    }
  }, [volume]);

  // –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –æ—á–∫–∏ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è
  const handleClick = () => {
    setGameState(prev => ({
      ...prev, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      score: prev.score + prev.multiplier, // –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏ —Å —É—á—ë—Ç–æ–º –º–Ω–æ–∂–∏—Ç–µ–ª—è
    }));
  };

  // –§—É–Ω–∫—Ü–∏—è –∞–ø–≥—Ä–µ–π–¥–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –æ—á–∫–æ–≤, –∏ –ø–æ–≤—ã—à–∞–µ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª—å
  const handleUpgrade = () => {
    if (gameState.score >= gameState.upgradeCost) { // –ï—Å–ª–∏ –æ—á–∫–æ–≤ —Ö–≤–∞—Ç–∞–µ—Ç
      const newMultiplier = gameState.multiplier + 1; // –ù–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å +1
      const newUpgradeCost = Math.floor(gameState.upgradeCost * 1.5); // –ù–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 50%
      setGameState({
        score: gameState.score - gameState.upgradeCost, // –í—ã—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ –æ—á–∫–æ–≤
        multiplier: newMultiplier, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
        upgradeCost: newUpgradeCost, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
      });
      Alert.alert('–ê–ø–≥—Ä–µ–π–¥!', `–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å x${newMultiplier}! –ú–ì–ï –±—Ä–∞—Ç—å—è –Ω–µ –ø–æ–¥–≤–µ–¥—É—Ç!`); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    } else {
      Alert.alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤!', '–°–æ–±–∏—Ä–∞–π –±–æ–ª—å—à–µ, –±—Ä–∞—Ç!'); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—á–∫–æ–≤ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
    }
  };

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSX –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä—ã
  return (
    <ImageBackground source={require('./assets/images/mge_2.png')} style={styles.gameContainer}>
      <Text style={styles.title}>–ú–ì–ï –ë—Ä–∞—Ç—å—è –ö–ª–∏–∫–µ—Ä</Text> {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã */}
      <TouchableOpacity onPress={handleClick} accessibilityLabel="–ö–ª–∏–∫–Ω–∏, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –æ—á–∫–∏!">
        {/* –ö–Ω–æ–ø–∫–∞-–∫–ª–∏–∫: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ –∫–ª–∏–∫–∞—Ç—å */}
        <Image
          source={require('./assets/images/mge_1.png')} // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –∫–ª–∏–∫–∞ (–≤–∞—à —Ñ–∞–π–ª)
          style={styles.clickImage}
          resizeMode="contain"
          accessibilityLabel="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–∫–∞"
        />
      </TouchableOpacity>
      <Text style={styles.scoreText}>–û—á–∫–∏: {gameState.score}</Text> {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –æ—á–∫–æ–≤ */}
      <Text style={styles.multiplierText}>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: x{gameState.multiplier}</Text> {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è */}
      <TouchableOpacity style={styles.upgradeButton} onPress={handleUpgrade} accessibilityLabel="–ö–Ω–æ–ø–∫–∞ –∞–ø–≥—Ä–µ–π–¥–∞">
        {/* –ö–Ω–æ–ø–∫–∞ –∞–ø–≥—Ä–µ–π–¥–∞ */}
        <Text style={styles.upgradeText}>–ê–ø–≥—Ä–µ–π–¥ (–°—Ç–æ–∏–º–æ—Å—Ç—å: {gameState.upgradeCost})</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.backToMenuButton} onPress={onBackToMenu} accessibilityLabel="–í –º–µ–Ω—é">
        <Text style={styles.backToMenuText}>–í –º–µ–Ω—é</Text>
      </TouchableOpacity>
      <Text style={styles.memeText}>¬´–ê–ª–µ–∫—Å–µ–π –µ–±–∞–ª –≥—É—Å–µ–π¬ª üòé</Text> {/* –ú–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç */}
    </ImageBackground>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–µ–Ω—é
function Menu({ onPlayPress, onFaqPress, onExitPress, onSettingsPress, volume, menuMusicRef }: { onPlayPress: () => void; onFaqPress: () => void; onExitPress: () => void; onSettingsPress: () => void; volume: number; menuMusicRef: React.RefObject<Audio.Sound | null> }) { // –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–ø—Å menuMusicRef
  // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ volume
  useEffect(() => {
    if (menuMusicRef.current) {
      menuMusicRef.current.setVolumeAsync(volume);
    }
  }, [volume]);

  return (
    <ImageBackground source={require('./assets/images/menu_background.png')} style={styles.menuContainer}>
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ (Engineer –∏–∑ TF2) - —Ç–µ–ø–µ—Ä—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–µ */}
      <TouchableOpacity style={styles.engineerImageContainer} onPress={onSettingsPress} accessibilityLabel="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
        <Image
          source={require('./assets/images/engineer.png')} // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ assets/images/)
          style={styles.engineerImage}
          resizeMode="contain"
        />
      </TouchableOpacity>

      {/* –ö–Ω–æ–ø–∫–∞ –ò–≥—Ä–∞—Ç—å –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
      <TouchableOpacity style={styles.playButton} onPress={onPlayPress} accessibilityLabel="–ò–≥—Ä–∞—Ç—å">
        <Image source={require('./assets/images/play.png')} style={styles.playImage} resizeMode="contain" />
        <Text style={styles.playText}>–ò–≥—Ä–∞—Ç—å</Text>
      </TouchableOpacity>

      {/* –ö–Ω–æ–ø–∫–∞ FAQ –≤–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞ */}
      <TouchableOpacity style={styles.faqButton} onPress={onFaqPress} accessibilityLabel="FAQ">
        <Image source={require('./assets/images/faq.png')} style={styles.faqImage} resizeMode="contain" />
        <Text style={styles.faqText}>FAQ</Text>
      </TouchableOpacity>

      {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –≤–Ω–∏–∑—É —Å–ª–µ–≤–∞ */}
      <TouchableOpacity style={styles.exitButton} onPress={onExitPress} accessibilityLabel="–í—ã—Ö–æ–¥">
        <Text style={styles.exitText}>–í—ã—Ö–æ–¥</Text>
      </TouchableOpacity>
    </ImageBackground>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
function Settings({ onBackPress, volume, setVolume }: { onBackPress: () => void; volume: number; setVolume: (v: number) => void }) {
  const saveVolume = async (newVolume: number) => {
    setVolume(newVolume);
    try {
      await AsyncStorage.setItem('volume', newVolume.toString());
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏:', e);
    }
  };

  const resetProgress = () => {
    Alert.alert('–°–±—Ä–æ—Å', '–í—ã —É–≤–µ—Ä–µ–Ω—ã? –ü—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.', [
      { text: '–û—Ç–º–µ–Ω–∞' },
      { text: '–°–±—Ä–æ—Å–∏—Ç—å', onPress: async () => {
        try {
          // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Å–±—Ä–æ—Å–∞
          const { sound } = await Audio.Sound.createAsync(require('./assets/sounds/suka_chto_tvorish.mp3')); // –ü—É—Ç—å –∫ –∑–≤—É–∫—É —Å–±—Ä–æ—Å–∞ (–¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ assets/sounds/)
          await sound.setVolumeAsync(volume); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
          await sound.playAsync(); // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
          // –ù–µ unload, —á—Ç–æ–±—ã –∑–≤—É–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª; –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –¥–æ–±–∞–≤—å—Ç–µ setTimeout –¥–ª—è unload
          
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
          await AsyncStorage.removeItem('mgeClickerGameData');
          Alert.alert('–°–±—Ä–æ—à–µ–Ω–æ!', '–ü—Ä–æ–≥—Ä–µ—Å—Å –æ—á–∏—â–µ–Ω.');
        } catch (e) {
          console.error('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞:', e);
        }
      }}
    ]);
  };

  return (
    <ImageBackground source={require('./assets/images/settings_background.png')} style={styles.settingsContainer}> {/* –ó–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –Ω–∞ –≤–∞—à–µ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
      {/* –£–±—Ä–∞–ª–∏ settingsOverlay ‚Äî —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞–ø—Ä—è–º—É—é –≤ ImageBackground */}
      <Text style={styles.settingsTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Text>

      <View style={styles.volumeSection}>
        <Text style={styles.volumeLabel}>–ì—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–∞</Text>
        <Slider
          style={styles.slider}
          minimumValue={0}
          maximumValue={1}
          value={volume}
          onSlidingComplete={saveVolume}
          minimumTrackTintColor="#2196F3"
          maximumTrackTintColor="#000000"
          thumbTintColor="#2196F3"
        />
        <Text style={styles.volumeText}>{Math.round(volume * 100)}%</Text>
      </View>

      <TouchableOpacity style={styles.resetButton} onPress={resetProgress}>
        <Text style={styles.buttonText}>–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.backButton} onPress={onBackPress}>
        <Text style={styles.buttonText}>–ù–∞–∑–∞–¥</Text>
      </TouchableOpacity>
    </ImageBackground>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç FAQ
function FAQ({ onBackPress }: { onBackPress: () => void }) {
  return (
    <ImageBackground source={require('./assets/images/faq_face.png')} style={styles.faqContainer}>
      <ScrollView contentContainerStyle={styles.faqScrollContainer}>
        <Text style={styles.faqTitle}>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)</Text>
        <Text style={styles.question}>–í–æ–ø—Ä–æ—Å 1: –ö–∞–∫ –∏–≥—Ä–∞—Ç—å?</Text>
        <Text style={styles.answer}>–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å" –∏ —Å–æ–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏!</Text>
        <Text style={styles.question}>–í–æ–ø—Ä–æ—Å 2: –ö–∞–∫ —É–ª—É—á—à–∞—Ç—å?</Text>
        <Text style={styles.answer}>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—á–∫–∏ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–æ–≤ –º–Ω–æ–∂–∏—Ç–µ–ª—è.</Text>
        <Text style={styles.question}>–í–æ–ø—Ä–æ—Å 3: –ß—Ç–æ —Ç–∞–∫–æ–µ –ú–ì–ï –±—Ä–∞—Ç—å—è?</Text>
        <Text style={styles.answer}>–≠—Ç–æ –º–µ–º–Ω–∞—è —Ç–µ–º–∞ –∏–≥—Ä—ã, –≥–¥–µ –±—Ä–∞—Ç—å—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç–µ–±—è –≤ –∫–ª–∏–∫–µ—Ä–µ!</Text>
        {/* –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã */}
        <TouchableOpacity style={styles.backButton} onPress={onBackPress} accessibilityLabel="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é">
          <Text style={styles.backText}>–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é</Text>
        </TouchableOpacity>
      </ScrollView>
    </ImageBackground>
  );
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export default function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤: intro, menu, game, faq, settings
  const [screen, setScreen] = useState<'intro' | 'menu' | 'game' | 'faq' | 'settings'>('intro');
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
  const [volume, setVolume] = useState<number>(0.5);
  // –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º
  const videoRef = useRef<Video>(null);
  // –°—Å—ã–ª–∫–∞ –Ω–∞ –º—É–∑—ã–∫—É –º–µ–Ω—é (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ —Å–µ—Å—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
  const menuMusicRef = useRef<Audio.Sound | null>(null);
  // –§–ª–∞–≥, —á—Ç–æ–±—ã –º—É–∑—ã–∫–∞ –º–µ–Ω—é –∏–≥—Ä–∞–ª–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ —Å–µ—Å—Å–∏—é
  const [menuMusicPlayed, setMenuMusicPlayed] = useState<boolean>(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Audio —Ä–µ–∂–∏–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  useEffect(() => {
    const initAudio = async () => {
      try {
        await Audio.setAudioModeAsync({
          allowsRecordingIOS: false,
          interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,
          playsInSilentModeIOS: true,
          shouldDuckAndroid: true,
          interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,
          playThroughEarpieceAndroid: false,
        });
        console.log('Audio —Ä–µ–∂–∏–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Audio:', error);
      }
    };
    initAudio();
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
  useEffect(() => {
    const loadVolume = async () => {
      try {
        const savedVolume = await AsyncStorage.getItem('volume');
        if (savedVolume !== null) {
          setVolume(parseFloat(savedVolume));
        }
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏:', e);
      }
    };
    loadVolume();
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º—É–∑—ã–∫—É –º–µ–Ω—é –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–±–µ–∑ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è)
  useEffect(() => {
    const loadMenuMusic = async () => {
      if (!menuMusicRef.current) {
        try {
          const { sound } = await Audio.Sound.createAsync(require('./assets/sounds/menu_music.mp3')); // –ü—É—Ç—å –∫ –º—É–∑—ã–∫–µ –º–µ–Ω—é (–¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ assets/sounds/)
          menuMusicRef.current = sound;
          await sound.setVolumeAsync(volume); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
          await sound.setIsLoopingAsync(false); // –ù–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É
          menuMusicRef.current = sound;
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º—É–∑—ã–∫–∏ –º–µ–Ω—é:', error);
        }
      }
    };
    loadMenuMusic();
  }, []); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

  // –£–ø—Ä–∞–≤–ª—è–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –º—É–∑—ã–∫–∏ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç screen
  useEffect(() => {
    const handleMenuMusic = async () => {
      if (menuMusicRef.current) {
        if (screen === 'menu') {
          // –ï—Å–ª–∏ –≤ –º–µ–Ω—é –∏ –º—É–∑—ã–∫–∞ –µ—â—ë –Ω–µ –∏–≥—Ä–∞–ª–∞ –∑–∞ —Å–µ—Å—Å–∏—é, –∏–≥—Ä–∞–µ–º
          if (!menuMusicPlayed) {
            try {
              await menuMusicRef.current.playAsync();
              setMenuMusicPlayed(true);
            } catch (error) {
              console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏ –º–µ–Ω—é:', error);
            }
          }
        } else {
          // –ï—Å–ª–∏ –Ω–µ –≤ –º–µ–Ω—é, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É
          try {
            await menuMusicRef.current.pauseAsync();
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º—É–∑—ã–∫–∏ –º–µ–Ω—é:', error);
          }
        }
      }
    };
    handleMenuMusic();
  }, [screen, menuMusicPlayed]);

  // –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è, –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω–∞ –º–µ–Ω—é
  const onVideoEnd = () => {
    setScreen('menu');
  };

  // –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º BackHandler –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const handleExit = () => {
    Alert.alert('–í—ã—Ö–æ–¥', '–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏, —Å–æ—Å—É–Ω–æ–∫?', [
      { text: '–í–µ—Ä–Ω—É—Ç—å—Å—è —Ç–∞–ø–∞—Ç—å' },
      { text: '–Ø –±–æ–ª—å—à–µ –Ω–µ –º–æ–≥—É', onPress: () => BackHandler.exitApp() }, // –ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥
    ]);
  };

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSX: —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ ‚Äî –≤–∏–¥–µ–æ, –º–µ–Ω—é, –∏–≥—Ä–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ FAQ
  return (
    <View style={styles.container}>
      {screen === 'intro' && (
        <Video
          ref={videoRef} // –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è
          source={require('./assets/images/logo.mp4')} // –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–Ω—Ç—Ä–æ-–≤–∏–¥–µ–æ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –∑–≤—É–∫–æ–º
          style={styles.video} // –°—Ç–∏–ª–∏ –¥–ª—è –≤–∏–¥–µ–æ (–ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω)
          resizeMode="contain" // –í–∏–¥–µ–æ –≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
          shouldPlay // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
          isMuted={false} // –í–∫–ª—é—á–∞–µ–º –∑–≤—É–∫ –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç—Ä–æ
          onPlaybackStatusUpdate={(status: AVPlaybackStatus) => { // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
            if (status.didJustFinish) { // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
              onVideoEnd(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–∫–æ–Ω—á–∞–Ω–∏—è
            }
          }}
        />
      )}
      {screen === 'menu' && (
        <Menu
          onPlayPress={() => setScreen('game')}
          onFaqPress={() => setScreen('faq')}
          onExitPress={handleExit}
          onSettingsPress={() => setScreen('settings')}
          volume={volume} // –ü–µ—Ä–µ–¥–∞—ë–º volume –≤ Menu
          menuMusicRef={menuMusicRef} // –ü–µ—Ä–µ–¥–∞—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ –º—É–∑—ã–∫—É –º–µ–Ω—é
        />
      )}
      {screen === 'game' && <Game volume={volume} onBackToMenu={() => setScreen('menu')} />}
      {screen === 'settings' && <Settings onBackPress={() => setScreen('menu')} volume={volume} setVolume={setVolume} />}
      {screen === 'faq' && <FAQ onBackPress={() => setScreen('menu')} />}
    </View>
  );
}

// –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
const styles = StyleSheet.create({
  container: { // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    flex: 1, // –ó–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    backgroundColor: 'black', // –ß—ë—Ä–Ω—ã–π —Ñ–æ–Ω
  },
  video: { // –°—Ç–∏–ª–∏ –¥–ª—è –≤–∏–¥–µ–æ
    flex: 1, // –ó–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    width: '100%', // –ü–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    height: '100%',
  },
  menuContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  engineerImageContainer: {  // –ù–æ–≤—ã–π —Å—Ç–∏–ª—å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–≥–æ)
    position: 'absolute',
    top: 20,  // –ü–æ–∑–∏—Ü–∏—è —Å–≤–µ—Ä—Ö—É
    left: 20,  // –°–ª–µ–≤–∞
    width: 80,  // –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é)
    height: 80,  // –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é)
    zIndex: 1,  // –ß—Ç–æ–±—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—ã–ª–æ –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  },
  engineerImage: {  // –°—Ç–∏–ª—å –¥–ª—è —Å–∞–º–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—É–±—Ä–∞–Ω position, width –∏ height, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
    width: '100%',  // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    height: '100%',
  },
  // –£–±—Ä–∞–Ω–∞ settingsButton –∏ settingsText, —Ç–∞–∫ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–æ–π
  playButton: {
    justifyContent: 'center',
    alignItems: 'center',
  },
  playImage: {
    width: 150, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 100
    height: 150, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 100
  },
  playText: {
    marginTop: 8,
    fontSize: 26, // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 26 px, –∫–∞–∫ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    fontWeight: 'bold',
    color: '#000',
  },
  faqButton: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    alignItems: 'center',
  },
  faqImage: {
    width: 80, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 50
    height: 80, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 50
  },
  faqText: {
    marginTop: 4,
    fontSize: 14,
    fontWeight: '600',
    color: '#000',
  },
  exitButton: {
    position: 'absolute',
    bottom: 50, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 20, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤—ã—à–µ
    left: 20,
    backgroundColor: '#ddd', // –î–æ–±–∞–≤–ª–µ–Ω —Ñ–æ–Ω –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
    padding: 10, // –î–æ–±–∞–≤–ª–µ–Ω padding –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∫–Ω–æ–ø–∫–∏
    borderRadius: 5, // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤
    alignItems: 'center',
  },
  exitText: {
    fontSize: 18, // –£–≤–µ–ª–∏—á–µ–Ω —Å 16 –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    fontWeight: '600',
    color: '#000',
  },
  settingsContainer: { // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–ø–µ—Ä—å ImageBackground
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  settingsTitle: {
    fontSize: 24,
    textAlign: 'center',
    marginBottom: 30,
    color: '#fff', // –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –Ω–∞ —Ñ–æ–Ω–µ (–æ—Å—Ç–∞–≤–ª—è–µ–º, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –±—ã–ª –≤–∏–¥–µ–Ω)
    fontWeight: 'bold',
  },
  volumeSection: {
    marginBottom: 20,
    alignItems: 'center',
    width: '100%',
  },
  volumeLabel: {
    fontSize: 18,
    marginBottom: 10,
    color: '#fff', // –ë–µ–ª—ã–π –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    fontWeight: '600',
  },
  slider: {
    width: '100%',
    height: 40,
  },
  volumeText: {
    textAlign: 'center',
    fontSize: 16,
    color: '#fff', // –ë–µ–ª—ã–π –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  },
  resetButton: {
    backgroundColor: '#ff4444',
    padding: 15,
    borderRadius: 10,
    marginBottom: 10,
    width: '80%',
  },
  backButton: {
    backgroundColor: '#2196F3',
    padding: 15,
    borderRadius: 10,
    width: '80%',
  },
  buttonText: {
    color: 'white',
    textAlign: 'center',
    fontSize: 16,
  },
  faqContainer: { 
    flex: 1,
  },
  faqScrollContainer: { 
    padding: 20, 
    flexGrow: 1,
  },
  faqTitle: { 
    fontSize: 28, 
    fontWeight: 'bold', 
    marginBottom: 20, 
    textAlign: 'center',
    color: '#ff6f00', // –ò–∑–º–µ–Ω—ë–Ω –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç
  },
  question: { 
    fontSize: 20, 
    fontWeight: '600', 
    marginTop: 15,
    color: '#fff', // –ò–∑–º–µ–Ω—ë–Ω –Ω–∞ –±–µ–ª—ã–π –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  },
  answer: { 
    fontSize: 16, 
    marginTop: 5, 
    color: '#ddd', // –ò–∑–º–µ–Ω—ë–Ω –Ω–∞ —Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ (–±—ã–ª '#555')
  },
  backText: {
    fontSize: 18,
    color: '#000',
  },
  gameContainer: { // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–≥—Ä—ã
    flex: 1, // –ó–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    justifyContent: 'center', // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
    alignItems: 'center', // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
    padding: 40, // –û—Ç—Å—Ç—É–ø—ã
  },
  title: { // –°—Ç–∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    fontSize: 36, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
    fontWeight: 'bold', // –ñ–∏—Ä–Ω—ã–π
    marginBottom: 25, // –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
    color: '#ff6f00', // –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç
    textShadowColor: '#000', // –¢–µ–Ω—å
    textShadowOffset: { width: 2, height: 2 }, // –°–º–µ—â–µ–Ω–∏–µ —Ç–µ–Ω–∏
    textShadowRadius: 4, // –†–∞–∑–º—ã—Ç–∏–µ —Ç–µ–Ω–∏
  },
  clickImage: { // –°—Ç–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–ª–∏–∫–∞
    width: 160, // –®–∏—Ä–∏–Ω–∞
    height: 160, // –í—ã—Å–æ—Ç–∞
    marginBottom: 25, // –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
  },
  scoreText: { // –°—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –æ—á–∫–æ–≤
    fontSize: 26, // –†–∞–∑–º–µ—Ä
    marginBottom: 8, // –û—Ç—Å—Ç—É–ø
    color: '#fff', // –ë–µ–ª—ã–π —Ü–≤–µ—Ç
    textShadowColor: '#000', // –¢–µ–Ω—å
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  multiplierText: { // –°—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—è
    fontSize: 20,
    marginBottom: 20,
    color: '#ddd', // –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π
    textShadowColor: '#000',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  upgradeButton: { // –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –∞–ø–≥—Ä–µ–π–¥–∞
    backgroundColor: '#ff4500', // –ö—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
    paddingVertical: 15, // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø
    paddingHorizontal: 30, // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø
    borderRadius: 12, // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤
    marginBottom: 20, // –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
    shadowColor: '#ff4500', // –¢–µ–Ω—å —Ü–≤–µ—Ç–∞ –∫–Ω–æ–ø–∫–∏
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 1, // –ü–æ–ª–Ω–∞—è –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ç–µ–Ω–∏
    shadowRadius: 10, // –†–∞–∑–º—ã—Ç–∏–µ —Ç–µ–Ω–∏
  },
  upgradeText: { // –°—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
    color: 'white', // –ë–µ–ª—ã–π —Ü–≤–µ—Ç
    fontSize: 20, // –†–∞–∑–º–µ—Ä
    fontWeight: '700', // –ñ–∏—Ä–Ω—ã–π
  },
  backToMenuButton: { // –ù–æ–≤—ã–π —Å—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –º–µ–Ω—é"
    backgroundColor: '#2196F3', // –°–∏–Ω–∏–π —Ñ–æ–Ω, –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 8,
    marginBottom: 10, // –û—Ç—Å—Ç—É–ø –ø–µ—Ä–µ–¥ –º–µ–º–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
  },
  backToMenuText: { // –°—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –º–µ–Ω—é"
    color: 'white',
    fontSize: 18,
    fontWeight: '600',
  },
  memeText: { // –°—Ç–∏–ª–∏ –º–µ–º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    fontSize: 16, // –†–∞–∑–º–µ—Ä
    color: '#ccc', // –°–µ—Ä—ã–π —Ü–≤–µ—Ç
    fontStyle: 'italic', // –ö—É—Ä—Å–∏–≤
    maxWidth: 400, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    textAlign: 'center', // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
  },
});
